jobs:
  test:
    working_directory: ~/ktg_chat/backend
    docker:
      - image: cimg/python:3.12.5
        environment:
          SQLALCHEMY_DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/chat"
          SECRET_KEY: "2f3g35rg3gerget44wf535"
          ALGORITHM: "HS256"
          ACCESS_TOKEN_EXPIRE_MINUTES: 23
          ORGANISATION_TOKEN_EXPIRE_DAYS: 20
          AWS_ACCESS_KEY_ID: "2f3g35rg3gerget44wf535"
          AWS_SECRET_ACCESS_KEY: "2f3g35rg"
          AWS_STORAGE_BUCKET_NAME: "chatserver"
          AWS_PRESIGNED_EXPIRY: 20
          AWS_S3_SIGNATURE_VERSION: "ipv4"
          AWS_S3_REGION_NAME: "s3-us-east-1"
          AWS_S3_CUSTOM_DOMAIN": "localhost"
          FILE_MAX_SIZE: "10485760"
          IS_TESTING: "True"
          IS_CI: "True"
          # DATABASE
          DATABASE_HOST: "localhost"
          DATABASE_USER: "postgres"
          DATABASE_PASSWORD: "postgres"
          DATABASE_NAME: "chat"
          DATABASE_PORT: 5432

      - image: cimg/python:3.9.12
        environment:
          CIRCLE_ARTIFACTS: .artifacts
          DATABASE_URL: postgresql://ubuntu@localhost/circle_test
          ENVIRONMENT: circleci
          PYTHONPATH: .

      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: "postgres"
          POSTGRES_DB: "chat"
          POSTGRES_PASSWORD: "postgres"

    steps:
      - checkout

      - restore_cache:
          keys:
            - ktg_chat-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ~/.cache/pip
          key: ktg_chat-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Code linting
          command: scripts/pre-commit.sh

      - run:
          name: Run migrations
          command: alembic upgrade head

      - run:
          name: Run tests
          command: pytest app -v

  build_docker_image:
    resource_class: medium
    machine:
      image: default
    steps:
      - checkout

      - run:
          name: Build image
          command: docker build -t tuulboxchat .

      - run:
          name: Publish image
          command: ./scripts/publish-image.sh $CIRCLE_BRANCH

  deploy:
    resource_class: small
    working_directory: ~/circleci-transclosure
    docker:
      - image: python:3.8-slim-buster
    steps:
      - checkout

      - run:
          name: Install libraries
          command: |
            pip install -U pip awscli

      - run:
          name: Deploy to ECS
          command: ./scripts/deploy-ecs.sh $CIRCLE_BRANCH
workflows:
  version: 2
  build:
    jobs:
      - test
      - build_docker_image:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - production

      - deploy:
          requires:
            - build_docker_image
          filters:
            branches:
              only:
                - master
                - production
